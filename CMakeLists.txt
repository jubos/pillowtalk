CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
SET(CMAKE_VERBOSE_MAKEFILE off)
PROJECT( pillowtalk )

SET(CMAKE_C_FLAGS "-Wall")
SET(CMAKE_C_FLAGS_DEBUG "-DDEBUG -g")
SET(CMAKE_C_FLAGS_RELEASE "-DNDEBUG -O2 -Wuninitialized")

SET (PILLOWTALK_MAJOR 0)
SET (PILLOWTALK_MINOR 3)
SET (PILLOWTALK_MICRO 0)

# Default to Release type
IF (NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "Release")
ENDIF (NOT CMAKE_BUILD_TYPE)

# Here we look for curl
#FIND_PATH(CURL_INCLUDE_DIR curl.h /usr/local/include/curl /usr/include/curl )
#FIND_LIBRARY(CURL_LIBRARY NAMES curl PATHS /usr/local/lib /usr/lib NO_DEFAULT_PATH)

FIND_PATH(CURL_INCLUDE_DIR curl/curl.h)
FIND_LIBRARY(CURL_LIBRARY NAMES curl)

MESSAGE("-- Curl Include Dir:" ${CURL_INCLUDE_DIR})
MESSAGE("-- Curl Library:" ${CURL_LIBRARY})

IF (CURL_INCLUDE_DIR AND CURL_LIBRARY)
  SET(CURL_FOUND TRUE)
ELSE (CURL_INCLUDE_DIR AND CURL_LIBRARY)
  MESSAGE(FATAL_ERROR "Could not find CURL")
ENDIF (CURL_INCLUDE_DIR AND CURL_LIBRARY)

INCLUDE_DIRECTORIES(${CURL_INCLUDE_DIR})

# Here we look for yajl
FIND_PATH(YAJL_INCLUDE_DIR yajl/yajl_parse.h)
FIND_FILE(YAJL_VERSION yajl/yajl_version.h)
FIND_LIBRARY(YAJL_LIBRARY NAMES yajl)

MESSAGE("-- yajl Include Dir:" ${YAJL_INCLUDE_DIR})
MESSAGE("-- yajl Library:" ${YAJL_LIBRARY})
MESSAGE("-- yajl Version File:" ${YAJL_VERSION})

IF (YAJL_INCLUDE_DIR AND YAJL_LIBRARY)
  SET(YAJL_FOUND TRUE)
ELSE (YAJL_INCLUDE_DIR AND YAJL_LIBRARY)
  MESSAGE(FATAL_ERROR "Could not find YAJL")
ENDIF (YAJL_INCLUDE_DIR AND YAJL_LIBRARY)
IF (YAJL_VERSION)
  ADD_DEFINITIONS(-DPT_HAVE_YAJL_VERSION)
ENDIF (YAJL_VERSION)

INCLUDE_DIRECTORIES(${YAJL_INCLUDE_DIR})

add_subdirectory(src)
add_subdirectory(test)

enable_testing()
